
Paginas web utilizando abordagem tradicional - Backend retorna html das paginas ja pronto e não tem responsabilidade na visualização da pag


SPA - Single page aplications - Reponsabilidade html fica no front, backend retorna Json com dados, pagina não recarrega, rotas
controladas pelo front-end (não usa backend para rotas)
vários clients (front-ends ) para o mesmo back-end

pasta public - pasta para arquivos que precisam estar publicos na aplicação

pwa

todo html e todo css da aplicação é gerado a partir de javascript

import React from 'react'; - importado dentro de todo arquivo js que usar html

JSX - Javascript + html

ReactDOM - Possibilita react comunicar com DOM Do html

3 Conceitos React
 -Componente
 -Estado
 -Propriedade

 Componente : Função que retorna Conteudo html/css ou js
 quando criar componente - quando se utiliza muito a mesma parte de codigo/isolar pedaço da aplicação que não infrija app

    recomendado 1 ou 2 components por arquivo

    componentes são utilizado como tag html em outro component

    export default nomecomponent; - exportar component para outros

Propriedade - toda vez que é passado um atributo/função/variavel para um componente
    propriedade é acessada (dentro do component que ela é usada) por parametro chamado "props"
    e utilizada no jsx com chaves {}
    <h1>{props.title}<h1>  
   --não se pode ter mais de 1 component um embaixo do outro avulso, eles precisam estar dentro de um container ou tag sem nomeclatura
    (fragment </>)

Estado - informação que o componente vai utilizar 
    - funções que serão disparadas pelo component são criadas dentro dele proprio
    <button onClick={nome da função}>Incrementar</button>

    react não monitora alterações em valores de variaveis, por isso utilizar estado
    useState(valor inicial da variavel) - função utilizada para criar estado - não atualiza valor da variavel mas cria uma nova
    a cada chamada
    retorna vetor contendo a variavel a ser monitorada e uma função para alterar seu valor
    imutabilidade

class no react vira classname
for vira htmlFor

/* + encontra todo input-block que tenha um input-block antes dele
para estilizar todos menos o primeiro*/

display:block na label para jogar o input para proxima linha

display:grid; - coloca inputs lado a lado
grid-template-columns: 1fr 1fr; - colunas

gap - distancia colunas e linhas com espaço
border-radius: 50% - imagem redonda


aplicando reponsividade com pixel maximo 
@media (max-width: 1000px) {

    #app {
        flex-direction: column;
    }

}

useEffect(qual função executar, quando executar, recebe vetor); - dispara função toda vez que informação alterar
se vetor estiver vazio excuta uma unica vez, se tiver uma variavel, a função é executada toda vez que o valor da variavel mudar

onChange={e => setLatitude(e.target.value)} - armazena valor de um input dentro de valor de estado

  async function handleAddDev(e) {
    e.preventDefault();
  } 
  atualiza state


  cors - extensão do node que permite que api seja acessada por outros endereços (react)
  app.use(cors({origin: 'endereço que vai acessar'})); - vazio para ser acessado de qualquer endereço


  axios - faz comunicação com back node

      import axios from 'axios';
    
    const api = axios.create({
        baseURL: 'http://localhost:3333'
    })
    
      export default api;


      useEffect para carregar listas de dados do db e fazer uso do state


      ---IMPORTANTE---
      Colocar lista de devs no container html dinamicamente
      {devs.map(dev => (conteudo html a colocado dinamicamente junto com as propriedades))

     setDevs([...dev, response.data]); - atualizar array que atualiza pagina toda vez que for cadastrado um novo